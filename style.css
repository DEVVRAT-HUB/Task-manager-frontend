/* CSS Variables for Theming */
:root {
    --bg-gradient-start: #FF6F61;
    --bg-gradient-mid: #DE3163;
    --bg-gradient-end: #BB8FCE;
    --text-color: #fff;
    --app-bg: rgba(255, 255, 255, 0.15);
    --app-border: rgba(255, 255, 255, 0.18);
    --input-bg: rgba(255, 255, 255, 0.2);
    --input-placeholder: rgba(255, 255, 255, 0.7);
    --button-bg-primary: #197ebc;
    --button-bg-hover: #18408c;
    --task-item-bg: rgba(255, 255, 255, 0.1);
    --task-item-hover-bg: rgba(255, 255, 255, 0.15);
    --checkbox-border: #DE3163;
    --checkbox-checked-bg: #DE3163;
    --completed-text-color: rgba(255, 255, 255, 0.6);
    --edit-delete-btn-bg: rgba(255, 255, 255, 0.2);
    --edit-btn-hover-bg: #BB8FCE;
    --delete-btn-hover-bg: #FF6F61;
    --progress-bar-track-bg: rgba(255, 255, 255, 0.2);
    --progress-bar-fill-bg: #DE3163;
    --numbers-bg: #BB8FCE;
    --input-focus-border: #BB8FCE;
    --confetti-color-1: #f00;
    --confetti-color-2: #0f0;
    --confetti-color-3: #00f;
    --confetti-color-4: #ff0;
    --confetti-color-5: #0ff;
    --confetti-color-6: #f0f;
    --priority-low-color: #5cb85c; /* Green */
    --priority-medium-color: #f0ad4e; /* Orange */
    --priority-high-color: #d9534f; /* Red */
    --empty-state-icon-color: rgba(255, 255, 255, 0.4);
    --empty-state-text-color: rgba(255, 255, 255, 0.6);
    /* Custom dropdown variables */
    --custom-dropdown-bg: rgba(255, 255, 255, 0.2);
    --custom-dropdown-hover-bg: rgba(255, 255, 255, 0.3);
    --custom-dropdown-border: rgba(255, 255, 255, 0.3);
}

/* Dark Mode Variables */
body.dark-mode {
    --bg-gradient-start: #2c3e50;
    --bg-gradient-mid: #34495e;
    --bg-gradient-end: #1a252f;
    --text-color: #f0f0f0;
    --app-bg: rgba(0, 0, 0, 0.3);
    --app-border: rgba(255, 255, 255, 0.1);
    --input-bg: rgba(0, 0, 0, 0.4);
    --input-placeholder: rgba(255, 255, 255, 0.6);
    --button-bg-primary: #8e44ad;
    --button-bg-hover: #9b59b6;
    --task-item-bg: rgba(0, 0, 0, 0.2);
    --task-item-hover-bg: rgba(0, 0, 0, 0.3);
    --checkbox-border: #9b59b6;
    --checkbox-checked-bg: #9b59b6;
    --completed-text-color: rgba(255, 255, 255, 0.4);
    --edit-delete-btn-bg: rgba(0, 0, 0, 0.3);
    --edit-btn-hover-bg: #3498db;
    --delete-btn-hover-bg: #e74c3c;
    --progress-bar-track-bg: rgba(0, 0, 0, 0.4);
    --progress-bar-fill-bg: #8e44ad;
    --numbers-bg: #3498db;
    --input-focus-border: #3498db;
    --empty-state-icon-color: rgba(255, 255, 255, 0.3);
    --empty-state-text-color: rgba(255, 255, 255, 0.5);
    /* Custom dropdown variables (Dark Mode) */
    --custom-dropdown-bg: rgba(0, 0, 0, 0.4);
    --custom-dropdown-hover-bg: rgba(0, 0, 0, 0.5);
    --custom-dropdown-border: rgba(255, 255, 255, 0.2);
}

/* Base styles and resets */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Inter', sans-serif;
}

body {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background: linear-gradient(135deg, var(--bg-gradient-start), var(--bg-gradient-mid), var(--bg-gradient-end));
    color: var(--text-color);
    transition: background 0.5s ease; /* Smooth transition for theme change */
}

/* Container for the whole application */
.container {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    min-height: 100vh;
    padding: 1rem;
}

/* To-Do App Main Styling */
.to-do-app {
    width: 100%;
    max-width: 480px; /* Slightly increased max-width */
    background: var(--app-bg);
    padding: 2rem;
    border-radius: 1.5rem;
    box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border: 1px solid var(--app-border);
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    text-align: center;
    transition: background 0.5s ease, border-color 0.5s ease, box-shadow 0.5s ease;
}

.to-do-app h1 {
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--text-color);
    margin-bottom: 1.5rem;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
}

/* Input Area Styling */
.input-area {
    display: flex;
    flex-direction: column; /* Stack children vertically */
    gap: 0.5rem; /* Space between input rows */
    background: none; /* No background on container, children will have it */
    border-radius: 2rem;
    padding: 0.5rem;
    box-shadow: inset 0 2px 5px rgba(0, 0, 0, 0.1);
    border: 2px solid transparent;
    transition: border-color 0.3s ease, box-shadow 0.3s ease;
    position: relative;
}

.input-area:focus-within {
    border-color: var(--input-focus-border);
    box-shadow: 0 0 15px var(--input-focus-border);
}

/* Group for task input and priority dropdown */
.input-row-top {
    display: flex;
    gap: 0.5rem;
    width: 100%;
    flex-wrap: wrap; /* Allow wrapping on smaller screens */
}

.input-row-top input,
.input-row-top .custom-select {
    flex: 1; /* Distribute space horizontally */
    min-width: 120px; /* Ensure minimum width before wrapping */
    box-sizing: border-box; /* Include padding and border in width */
    background: var(--input-bg);
    border-radius: 1.5rem;
    padding: 0.75rem 1rem;
    font-size: 1.1rem;
    color: var(--text-color);
    border: none;
    outline: none;
    transition: background 0.5s ease;
}
.input-row-top .custom-select {
     padding: 0; /* Custom select handles its own padding */
}


/* Styling for the date input - make it full width */
.input-row-bottom {
    width: 100%;
    position: relative; /* For the date picker positioning */
}

.input-row-bottom input[type="date"] {
    width: 100%;
    background: var(--input-bg);
    border-radius: 1.5rem;
    padding: 0.75rem 1rem;
    font-size: 1.1rem;
    color: var(--text-color);
    border: none;
    outline: none;
    box-sizing: border-box;
    transition: background 0.5s ease;
}

.input-area input::placeholder {
    color: var(--input-placeholder);
}

/* NEW: Custom Select Styling */
.custom-select {
    position: relative;
    /* flex: 1; -> Removed from here, now applied to .input-row-top children */
    min-width: 120px;
    border-radius: 1.5rem;
    background-color: var(--input-bg);
    transition: background 0.5s ease;
}

.select-selected {
    background-color: transparent;
    color: var(--text-color);
    padding: 0.75rem 1rem;
    padding-right: 2.5rem;
    border-radius: 1.5rem;
    cursor: pointer;
    position: relative;
    text-align: left;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    transition: background 0.3s ease;
    height: 100%; /* Ensure it fills the custom-select parent height */
    display: flex;
    align-items: center; /* Vertically center text */
}

.select-selected:after {
    position: absolute;
    content: "";
    top: 50%;
    right: 1rem;
    width: 0;
    height: 0;
    border: 6px solid transparent;
    border-color: var(--text-color) transparent transparent transparent;
    transform: translateY(-50%);
    transition: transform 0.3s ease;
}

.select-selected.select-arrow-active:after {
    transform: translateY(-50%) rotate(180deg);
}

.select-items {
    position: absolute;
    background-color: var(--custom-dropdown-bg);
    top: calc(100% + 0.5rem);
    left: 0;
    right: 0;
    z-index: 100;
    border-radius: 0.75rem;
    /* Removed overflow: hidden; from here */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
    border: 1px solid var(--custom-dropdown-border);
    display: none;
    padding: 0.5rem 0;
    max-height: 200px; /* Limit height to prevent excessive stretching */
    overflow-y: auto; /* Add scroll if content overflows */
    box-sizing: border-box;
}

.select-items div {
    color: var(--text-color);
    padding: 0.75rem 1rem;
    cursor: pointer;
    transition: background-color 0.3s ease;
    white-space: nowrap;
}

.select-items div:hover {
    background-color: var(--custom-dropdown-hover-bg);
}


/* Add Task Button */
.input-area button {
    background: var(--button-bg-primary);
    color: var(--text-color);
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 2rem;
    font-size: 1.1rem;
    cursor: pointer;
    transition: background 0.3s ease, transform 0.2s ease, box-shadow 0.3s ease;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    width: 100%; /* Make button full width by default */
}

.input-area button:hover {
    background: var(--button-bg-hover);
    transform: translateY(-3px) scale(1.02);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);
}
.input-area button:active {
    transform: translateY(0);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}


/* Empty Image/Todus Container */
.todus-container {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100px;
    flex-direction: column;
    gap: 1rem;
    padding: 2rem;
    text-align: center;
}

/* NEW: Empty State Message Styling */
.empty-state-message {
    display: none; /* Controlled by JS */
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    color: var(--empty-state-text-color);
    opacity: 0.8;
    font-size: 1.1rem;
    font-weight: 500;
    text-shadow: 0 1px 2px rgba(0,0,0,0.1);
}

.empty-state-message svg {
    width: 80px;
    height: 80px;
    fill: var(--empty-state-icon-color);
    transition: fill 0.3s ease;
}


/* Task List Styling */
.task-list {
    list-style: none;
    width: 100%;
    margin-top: 1rem;
    text-align: left;
}

.task-list li {
    display: flex;
    align-items: center;
    justify-content: space-between;
    background: var(--task-item-bg);
    margin-bottom: 0.8rem;
    padding: 0.8rem 1.2rem;
    border-radius: 0.75rem;
    font-size: 1.1rem;
    color: var(--text-color);
    position: relative;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    transition: box-shadow 0.3s ease, opacity 0.3s ease, transform 0.3s ease, background 0.3s ease, border-left 0.3s ease; /* Added border-left transition */
    word-break: break-word;
    border-left: 5px solid transparent; /* For priority indication */
}

.task-list li.priority-low { border-left-color: var(--priority-low-color); }
.task-list li.priority-medium { border-left-color: var(--priority-medium-color); }
.task-list li.priority-high { border-left-color: var(--priority-high-color); }
.task-list li.overdue {
    box-shadow: 0 0 15px rgba(255, 0, 0, 0.5); /* Red glow for overdue */
    animation: pulse-red 1.5s infinite alternate; /* Gentle pulse */
}

@keyframes pulse-red {
    from { box-shadow: 0 0 10px rgba(255, 0, 0, 0.3); }
    to { box-shadow: 0 0 20px rgba(255, 0, 0, 0.7); }
}


.task-list li:hover {
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
    background: var(--task-item-hover-bg);
}

/* Task entry/exit animations */
@keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
}

@keyframes fadeOut {
    from { opacity: 1; transform: translateX(0); }
    to { opacity: 0; transform: translateX(-20px); }
}

.task-list li.fade-in {
    animation: fadeIn 0.3s ease-out forwards;
}

.task-list li.fade-out {
    animation: fadeOut 0.3s ease-out forwards;
}

/* Checkbox Styling */
.task-list li input[type="checkbox"] {
    appearance: none;
    -webkit-appearance: none;
    width: 25px;
    height: 25px;
    min-width: 25px;
    border: 2px solid var(--checkbox-border);
    border-radius: 50%;
    cursor: pointer;
    position: relative;
    transition: background 0.3s ease, border-color 0.3s ease;
    margin-right: 1rem;
}

.task-list li input[type="checkbox"]:checked {
    background: var(--checkbox-checked-bg);
    border-color: var(--checkbox-checked-bg);
}

.task-list li input[type="checkbox"]:checked::before {
    content: '\2713';
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 1.2rem;
    color: #fff;
}

/* Task text span */
.task-list li span {
    flex: 1;
    margin-right: 1rem;
    overflow-wrap: break-word;
    word-wrap: break-word;
    hyphens: auto;
}

/* Completed Task Styling */
.task-list li.completed span {
    color: var(--completed-text-color);
    text-decoration: line-through;
}

/* Task Buttons Container & Meta Info */
.task-details {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    gap: 0.3rem;
    margin-left: 1rem;
}

.task-buttons {
    display: flex;
    gap: 0.5rem;
    min-width: 70px;
}

.task-meta {
    display: flex;
    flex-direction: column;
    font-size: 0.8rem;
    color: rgba(255, 255, 255, 0.7);
    text-align: right;
}
.task-meta .due-date {
    font-weight: 500;
}
.task-meta .priority-label {
    font-weight: 600;
    text-transform: capitalize;
}

/* Edit and Delete Buttons */
.task-list li button {
    background: var(--edit-delete-btn-bg);
    border: none;
    border-radius: 50%;
    width: 35px;
    height: 35px;
    color: var(--text-color);
    font-size: 1rem;
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    transition: background 0.3s ease, transform 0.2s ease, opacity 0.3s ease;
}

.task-list li button:hover {
    transform: scale(1.1);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
}
.task-list li button:active {
    transform: scale(1.0);
}

.task-list li .edit-BTN:hover {
    background: var(--edit-btn-hover-bg);
}

.task-list li .delete-BTN:hover {
    background: var(--delete-btn-hover-bg);
}

/* Progress Bar Styling */
.stat-container {
    display: flex;
    flex-direction: column;
    gap: 0.8rem;
    padding: 1.2rem;
    background: var(--app-bg);
    border-radius: 0.75rem;
    border: 1px solid var(--app-border);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    transition: background 0.5s ease, border-color 0.5s ease, box-shadow 0.5s ease;
}

.stat-container .details {
    width: 100%;
}

.stat-container h3 {
    font-size: 1.2rem;
    color: var(--text-color);
    margin-bottom: 0.5rem;
    text-align: left;
}

.progress-bar {
    width: 100%;
    height: 10px;
    background-color: var(--progress-bar-track-bg);
    border-radius: 10px;
    position: relative;
    overflow: hidden;
}

.progress {
    width: 0%;
    height: 100%;
    background-color: var(--progress-bar-fill-bg);
    border-radius: 10px;
    transition: width 0.5s ease-out;
}

/* Progress bar pulse animation when 100% */
@keyframes pulse {
    0% { box-shadow: 0 0 0 0 rgba(222, 49, 99, 0.7); }
    70% { box-shadow: 0 0 0 10px rgba(222, 49, 99, 0); }
    100% { box-shadow: 0 0 0 0 rgba(222, 49, 99, 0); }
}

.progress.full-pulse {
    animation: pulse 1s infinite cubic-bezier(0.66, 0, 0, 1);
}

.numbers {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 50px;
    height: 30px;
    background-color: var(--numbers-bg);
    color: var(--text-color);
    font-weight: 600;
    border-radius: 5px;
    font-size: 0.9rem;
    align-self: flex-end;
    margin-top: 0.5rem;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
}

/* Theme Toggle Button */
.theme-toggle {
    position: absolute;
    top: 1rem;
    right: 1rem;
    background: var(--button-bg-primary);
    color: var(--text-color);
    border: none;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    font-size: 1.2rem;
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: 0 2px 5px rgba(0,0,0,0.2);
    transition: background 0.3s ease, transform 0.2s ease;
}
.theme-toggle:hover {
    background: var(--button-bg-hover);
    transform: scale(1.1);
}

/* Responsive Adjustments */
@media screen and (max-width: 600px) {
    .to-do-app {
        padding: 1.5rem;
        border-radius: 1rem;
    }

    .to-do-app h1 {
        font-size: 2rem;
        margin-bottom: 1rem;
    }

    .input-area {
        padding: 0.4rem;
        border-radius: 1.5rem;
        /* flex-wrap: wrap; Removed as input-row-top handles its own wrap */
        gap: 0.5rem; /* Space between input rows */
    }

    /* Ensure the elements inside input-row-top stack */
    .input-row-top {
        flex-direction: column; /* Stack task input and custom select */
    }

    .input-row-top input,
    .input-row-top .custom-select {
        width: 100%; /* Make them full width */
    }

    .input-row-bottom input[type="date"] {
        width: 100%; /* Make date full width */
    }

    .input-area button {
        padding: 0.6rem 1rem;
        font-size: 1rem;
        border-radius: 1.5rem;
        width: 100%; /* Full width button */
    }

    .task-list li {
        font-size: 0.95rem;
        padding: 0.7rem 1rem;
        margin-bottom: 0.7rem;
        flex-wrap: wrap; /* Allow task item to wrap */
    }

    .task-list li input[type="checkbox"] {
        width: 22px;
        height: 22px;
        min-width: 22px;
        margin-right: 0.8rem;
    }

    .task-details {
        flex-direction: row; /* Stack meta info horizontally if needed */
        width: 100%;
        justify-content: flex-end;
        margin-top: 0.5rem;
    }

    .task-buttons {
        min-width: unset; /* Remove min-width to allow shrinking */
    }

    .task-list li button {
        width: 30px;
        height: 30px;
        font-size: 0.9rem;
    }

    .stat-container {
        padding: 1rem;
    }

    .stat-container h3 {
        font-size: 1.1rem;
    }

    .numbers {
        width: 45px;
        height: 28px;
        font-size: 0.8rem;
    }
}
